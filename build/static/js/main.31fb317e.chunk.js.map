{"version":3,"sources":["Homework1/Input.js","Homework1/List.js","Homework1/TodoList.js","index.js"],"names":["Input","handleChange","e","props","onChange","addTodo","add","inpValue","this","htmlFor","id","ref","inp","input","type","value","onClick","Component","List","toggle","idx","tog","delTodo","del","renderTodos","done","todos","map","todo","checked","dangerouslySetInnerHTML","__html","title","arr1","filter","item","arr2","length","TodoList","setState","target","console","log","state","alert","document","getElementById","index","localStorage","setItem","JSON","stringify","newTodos","parse","getItem","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.31fb317e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Input extends Component {\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state = {\r\n    //         inpValue:'',\r\n    //         todos:[]\r\n    //     }\r\n    // }\r\n    handleChange=(e)=>{\r\n        this.props.onChange(e);\r\n        // this.setState({inpValue:e.target.value})\r\n        // console.log(e.target.value)\r\n    }\r\n    addTodo = () => {\r\n        this.props.add();\r\n    }\r\n   \r\n    render() {\r\n        let inpValue = this.props.inpValue;\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                id='inp'\r\n                ref={inp=>this.input=inp}\r\n                type='text' \r\n                value={inpValue}\r\n                onChange={this.handleChange}/>\r\n                <button\r\n                onClick={this.addTodo}>添加</button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\n\r\nexport class List extends Component {\r\n    toggle = (idx) => {\r\n        this.props.tog(idx)\r\n    }\r\n    delTodo = (idx) => {\r\n        this.props.del(idx)\r\n    }\r\n    renderTodos=(done)=>{\r\n        let todos = this.props.todos;\r\n        return todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n               return <li>\r\n               <input \r\n               onClick={()=>this.toggle(idx)}\r\n               checked={done}\r\n               type=\"checkbox\"\r\n               />\r\n               <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n               <button \r\n               onClick={()=>this.delTodo(idx)}\r\n               >删除</button>\r\n           </li>\r\n            }\r\n           \r\n        })\r\n   }\r\n    render() {\r\n        let todos = this.props.todos;\r\n        let arr1 = todos.filter((item)=>!item.done);\r\n        let arr2 = todos.filter((item)=> item.done);\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {\r\n                       this.renderTodos(false) \r\n                    }\r\n                         \r\n                </ul>                   \r\n                <h2>已经完成{arr2.length}</h2>\r\n                <ul>\r\n                    {\r\n                        this.renderTodos(true)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\nclass TodoList extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false},\r\n               ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n        console.log(e.target.value)\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        return true;\r\n    }\r\n    \r\n    \r\n\r\n\r\n    addTodo=()=>{\r\n        if(this.state.inpValue == ''){\r\n            alert(\"不能添加空值\");\r\n        //    return;\r\n        }else{\r\n            this.setState({\r\n                todos:[\r\n                    {\r\n                        title:this.state.inpValue,\r\n                        done:false\r\n                    },\r\n                    ...this.state.todos\r\n                ]\r\n            })\r\n           \r\n        }\r\n        this.setState({inpValue:''});\r\n        var inp = document.getElementById('inp');\r\n        inp.value = '';\r\n        //this.state.todos.push({title:this.state.inpValue})\r\n       \r\n    }\r\n    delTodo=(idx)=>{\r\n        // let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        // newTodos.splice(idx,1)\r\n        // this.setState({todos:newTodos})\r\n        this.setState(\r\n            {\r\n                todos:this.state.todos.filter((item,index)=>index!=idx)\r\n            }\r\n        );\r\n        localStorage.setItem(\r\n            'todo',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    render() {\r\n        // const {todos} = this.state;\r\n         let inpValue = this.state.inpValue;\r\n        return (\r\n            <div className=\"reactTodoList\">\r\n                <h2>TodoList</h2>\r\n                <Input \r\n                // todos={this.state.todos} \r\n                value = {inpValue} \r\n                add = {this.addTodo}\r\n                onChange = {this.handleChange} \r\n                />\r\n                <List \r\n                todos={this.state.todos} \r\n                tog = {this.toggle} \r\n                del = {this.delTodo} />              \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Control from './pages/Control';\n// import Demo01 from './pages/Demo01'\n// import App from './pages/App.js'\n// import HOC, {Detail} from './pages/HOC';\n// import Hook from './pages/Hook'\n// import Context from './pages/context'\nimport TodoList from './Homework1/TodoList';\n// console.log(Context);\n\n\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   // <div>\n//   //   <HOC /><Detail/>\n//   // </div>,\n//   <Context.Provider value='123'>\n//     <Hook/>\n//   </Context.Provider>,\n//   document.getElementById('root')\n// );\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n//import $ from 'jquery';\n\n\n\n// const List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n\n\n// class Home extends React.Component{\n//   constructor(props){\n//       super(props);\n//       this.state = {\n//       data:[]\n//       }\n//   }\n//   componentDidMount(){\n//       fetch(`https://cnodejs.org/api/v1/topics`)\n//       .then(res=>res.json())\n//       .then(({data}) =>{\n//           this.setState({data})\n//       })\n//   }\n//   getData = (page) => {\n//       fetch(`https://cnodejs.org/api/v1/topics?page=`+page)\n//       .then(res=>res.json())\n//       .then(({data}) =>{\n//           this.setState({data})\n//       })\n//   }      \n//   render(){\n//       const{ data } = this.state;\n//       const btns = [1,2,3,4,5];\n//       return <div>\n//           {\n//               btns.map(\n//                   (item)=>(\n//                       <button\n//                       key = {item}\n//                       onClick={()=>this.getData(item)}\n//                       >\n//                           {item}\n//                       </button>\n//                   )\n//               )\n//           }\n//           <List data={data}/>\n//       </div>\n//   }\n// }\n// const Button = ()=>{\n//   const btns = [1,2,3,4,5];\n//   const handleClick = (num)=>{\n//     console.log(num)\n//   }\n//   return <div>\n//     {\n//       btns.map(\n//         (item)=>(\n//         <button key={item}\n//         onClick={()=>handleClick(item)}\n//         >{item}</button>))\n//     }\n//   </div>\n// }\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     fetch(`https://cnodejs.org/api/v1/topics`)\n//     .then(res=>res.json())\n//     .then(({data}) => {\n//       this.setState({data});\n//     })\n//   }\n//   render(){\n//     const {data} = this.state;\n//     return <div>\n//       <Button/>\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n\n\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       data:[]\n//     }\n//     // setInterval(()=>{\n//     //   this.setState({data:[5,6,7,8,9]})\n//     // },500)\n//     fetch(`https://cnodejs.org/api/v1/topics`)\n//     .then(res => res.json())\n//     .then(data => {\n//       //console.log(data)\n//       this.setState({data:data.data})\n//     })\n//   }\n//   render(){\n//     //const {data}=this.data;\n//     return <ul>\n//       {\n//         this.state.date.map(\n//           (item)=><li>{item}</li>\n//           )\n//       }\n//     </ul>\n//   }\n\n// }\n\n// console.log($);\n\n\n\n//let ele = <h1>hello react</h1>;\n// let ele = <h1 id='title'>\n//   <div>hello</div>\n//   react\n// </h1>;\n// let ele = React.createElement('h1',{id:'title'},'hello react');\n// console.log(ele);\n\n// let ele =<h1 title='a' id='title' className=\"tit\">\n//   <div>hello</div>\n//   react;\n//   <div>['hello','world']</div>\n// </h1>\n\n\n// let ReactDOM = {\n//   render(eleObj,container){\n//     //解构\n//     const {type,props} = eleObj;\n//     //创建第一层节点\n//     let ele=document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for(const prop in props){\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.createTextNode(child);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n//         //将第一层节点的对象的子元素添加过去\n//         props.children.forEach((child=>{\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         }))\n//         //ele.setAttribute('class',props[prop]);\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n//     container.appendChild(ele);\n//   }\n// }\n\n\n// setInterval(()=>{\n//   let ele =<h1 id='title' className='tit'>\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>\n\n//   ReactDOM.render(\n//     ele,\n//     document.getElementById('root')\n//   );\n// },1000)\n\n\n\n//组件声明\n//函数组件\n//UI(展示)组件，木偶组件\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n\n//智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     // this.state={\n//     //   name:'tom'\n//     // };\n//     // setInterval(()=>{\n//     //   this.setState({name:'jerry'});\n//     // },3000)\n\n//     this.state={\n//       name:new Date().toLocaleString()\n//     };\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString})\n//     },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//       <App title='任意值' id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n\n\n\n\n/* \n1.原生JS，DOM操作\n2.React：开发效率高，性能高\n3.环境搭建，创建一个项目、运行\n4.JS语法\n\n*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}